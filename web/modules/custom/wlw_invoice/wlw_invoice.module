<?php

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function wlw_invoice_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {

    case 'help.page.wlw_invoice':
      $output = '';
      $output .= '<h3>' . t('Functionality') . '</h3>';
      $output .= '<ol>';
      $output .= '<li>' . t('Generates PDF-invoice"') . '</li>';
      $output .= '<li>' . t('Send an invoice notification with Pdf-Attachement.') . '</li>';
      $output .= '<li>' . t('Removes invoice-tab on course order edit form.') . '</li>';
      $output .= '</ol>';
      $output .= '<h3>' . t('Configuration') . '</h3>';
      $output .= '<ol>';
      $output .= '</ol>';
      return $output;
  }
}

/**
 * Implements hook_theme().
 */
function wlw_invoice_theme($existing, $type, $theme, $path) {
  $templates = $path . '/templates';
  // Overrides commerce_invoice module commerce-invoice.html.twig with
  // the version of this module.
  $return = [
    'commerce_invoice' => [
    'template' => 'commerce-invoice',
    'path' => $templates
    ],
  ];
  return $return;
}

/**
 * Prepares variables for invoice templates. This is called in
 * commerce_invoice download method over UI.
 *
 * Default template: commerce-invoice.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing rendered fields.
 *   - attributes: HTML attributes for the containing element.
 */
function wlw_theme_preprocess_commerce_invoice(array &$variables) {
  // Prepares render array for pdf-invoice download over the user interface.
  $print_preparer = \Drupal::service('wlw_invoice.print_preparer');

  // Gets the output type to differ invoice|credit data.
  $invoice = $variables['elements']['#commerce_invoice'];
  $pdf_output_type = $invoice->getData('pdf_output_type');

  $new_variables = $print_preparer->preparePrintable($variables['elements']['#commerce_invoice'], $pdf_output_type);
  // Merge to not overriding other keys.
  $variables = array_merge($variables,$new_variables);
}

/**
 * Implements hook_preprocess_commerce_invoice().
 *   Same as above with seven theme. Because when calling rendering the commerce-invoice.html.twig
 *   template for pdf-invoice generation through changing order status to
 *   completed, the theme in render process is seven.
 *
 *   @see \Drupal\wlw_invoice\InvoicePrintBuilder;
 */
function seven_preprocess_commerce_invoice(array &$variables) {
  // Prepares render array for pdf-invoice download over the user interface.
  $print_preparer = \Drupal::service('wlw_invoice.print_preparer');

  // Gets the output type to differ invoice|credit data.
  $invoice = $variables['elements']['#commerce_invoice'];
  $pdf_output_type = $invoice->getData('pdf_output_type');

  $new_variables = $print_preparer->preparePrintable($variables['elements']['#commerce_invoice'], $pdf_output_type);
  // Merge to not overriding other keys.
  $variables = array_merge($variables,$new_variables);
}

/**
 * Implements hook_menu_local_tasks_alter();
 */
function wlw_invoice_menu_local_tasks_alter(&$data, $route_name) {
  $routes = ['entity.commerce_order.edit_form'];

  if (in_array($route_name, $routes)) {

    $order = \Drupal::request()->attributes->get('commerce_order');

    $type_value = $order->get('type')->getValue();
    if (!empty($type_value) && isset($type_value[0])) {
      $type = $order->get('type')->getValue()[0]['target_id'];

      // Removes invoice tab on course orders.
      if ($type == 'course') {
        unset($data['tabs'][0]['entity.commerce_order.invoices']);
      }
    }
  }
}
